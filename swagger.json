{
  "swagger": "2.0",
  "info": {
    "description": "Widgets - Documentation Api",
    "version": "1.0.0",
    "title": "Widget API"
  },
  "host": "localhost:8080",
  "schemes": [
    "http"
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get list of users",
        "operationId": "getUsers",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Find user by ID",
        "operationId": "getUser",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/widget": {
      "get": {
        "tags": [
          "widget"
        ],
        "summary": "Get list of widget",
        "operationId": "getWidgets",
        "description": "Return all widgets",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Widget"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "widget"
        ],
        "summary": "Create Widget",
        "operationId": "createWidget",
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
          "in": "body",
          "name": "body",
          "description": "Widget object that needs to be added",
          "required": false,
          "schema": {
            "$ref": "#/definitions/NewWidget"
          }
        }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/widget/{widgetId}": {
      "get": {
        "tags": [
          "widget"
        ],
        "summary": "Find widget by ID",
        "operationId": "getWidget",
        "security": [
          {
            "Bearer": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "widgetId",
            "in": "path",
            "description": "ID of widget to return",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "widget"
        ],
        "summary": "Update Widget",
        "operationId": "updateWidget",
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "widgetId",
            "in": "path",
            "description": "id",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Widget object that needs to be added",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NewWidget"
            }
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Widget"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/token": {
      "post": {
        "tags": [
          "token"
        ],
        "summary": "Create Token",
        "description": "Returns a token using a valid userID, it's needed a userID to link the token with the user. In the real world it's can be a login and password",
        "operationId": "createToken",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "formData",
            "description": "user id (use id 1 for test)",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [
        "id",
        "name",
        "gravatar"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "example": 23
        },
        "name": {
          "type": "string",
          "example": "Colin"
        },
        "gravatar": {
          "type": "string",
          "example": "http://www.gravatar.com/avatar/a51972ea936bc3b841350caef34ea47e?s=64&d=monsterid"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Widget": {
      "type": "object",
      "required": [
        "id",
        "name",
        "color",
        "price",
        "inventory",
        "melts"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "example": 16
        },
        "name": {
          "type": "string",
          "example": "Claster"
        },
        "color": {
          "type": "string",
          "example": "off-white"
        },
        "price": {
          "type": "number",
          "example": 12.56
        },
        "inventory": {
          "type": "integer",
          "example": 18
        },
        "melts": {
          "type": "boolean",
          "example": true
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "NewWidget": {
      "type": "object",
      "required": [
        "name",
        "color",
        "price",
        "inventory",
        "melts"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Claster"
        },
        "color": {
          "type": "string",
          "example": "off-white"
        },
        "price": {
          "type": "number",
          "example": 12.56
        },
        "inventory": {
          "type": "integer",
          "example": 18
        },
        "melts": {
          "type": "boolean",
          "example": true
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "Token": {
      "type": "object",
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1MDg3NzUwMDksInVzZXIiOnsiaWQiOjIsIm5hbWUiOiJLeWxlIiwiZ3JhdmF0YXIiOiJodHRwOi8vd3d3LmdyYXZhdGFyLmNvbS9hdmF0YXIvNDMyZjNlMzUzYzY4OWZjMzdhZjg2YWU4NjFkOTM0Zjk_cz02NFx1MDAyNmQ9bW9uc3RlcmlkIn19.Eyx3RfvRZnxjJXSHp_tichZcS4eETXckFib-9iNN8a8"
        }
      }
    }
  }
}